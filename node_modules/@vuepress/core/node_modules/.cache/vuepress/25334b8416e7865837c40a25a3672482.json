{"remainingRequest":"/Users/prithvi/lab/blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/prithvi/lab/blog/src/.vuepress/theme/layouts/ImageCrop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/prithvi/lab/blog/src/.vuepress/theme/layouts/ImageCrop.vue","mtime":1669098253302},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/babel-loader/lib/index.js","mtime":1669100514953},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js","mtime":1669100514895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQ3JvcHBlciB9IGZyb20gJ3Z1ZS1hZHZhbmNlZC1jcm9wcGVyJzsKaW1wb3J0IFNWR0ljb24gZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvYmFzZS9TVkdJY29uLnZ1ZSc7CmltcG9ydCAndnVlLWFkdmFuY2VkLWNyb3BwZXIvZGlzdC9zdHlsZS5jc3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ltYWdlQ3JvcCcsCiAgY29tcG9uZW50czogewogICAgQ3JvcHBlciwKICAgIFNWR0ljb24KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWFnZTogbnVsbCwKICAgICAgaW1hZ2VOYW1lOiAnJywKICAgICAgY3JvcHBlZEltYWdlOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgem9vbShmYWN0b3IpIHsKICAgICAgdGhpcy4kcmVmcy5jcm9wcGVyLnpvb20oZmFjdG9yKTsKICAgIH0sCiAgICByZXNldCgpIHsKICAgICAgdGhpcy5pbWFnZSA9IG51bGw7CiAgICAgIHRoaXMuY3JvcHBlZEltYWdlID0gbnVsbDsKICAgIH0sCiAgICBkcmFnb3ZlcihldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBpZiAoIWV2ZW50LmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdib3JkZXItc29saWQnKSkgewogICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYm9yZGVyLWRhc2hlZCcpOwogICAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmFkZCgnYm9yZGVyLXNvbGlkJyk7CiAgICAgIH0KICAgIH0sCiAgICBkcmFnbGVhdmUoZXZlbnQpIHsKICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5jbGFzc0xpc3QuYWRkKCdib3JkZXItZGFzaGVkJyk7CiAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYm9yZGVyLXNvbGlkJyk7CiAgICB9LAogICAgZHJvcChldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLmxvYWRJbWFnZSh7CiAgICAgICAgdGFyZ2V0OiB7CiAgICAgICAgICBmaWxlczogZXZlbnQuZGF0YVRyYW5zZmVyLmZpbGVzCiAgICAgICAgfQogICAgICB9KTsKICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5jbGFzc0xpc3QuYWRkKCdib3JkZXItZGFzaGVkJyk7CiAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYm9yZGVyLXNvbGlkJyk7CiAgICB9LAogICAgbG9hZEltYWdlKGV2ZW50KSB7CiAgICAgIGNvbnN0IGlucHV0ID0gZXZlbnQudGFyZ2V0OwogICAgICBpZiAoaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbMF0pIHsKICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgIHJlYWRlci5vbmxvYWQgPSBlID0+IHsKICAgICAgICAgIHRoaXMuaW1hZ2UgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgICB0aGlzLmltYWdlTmFtZSA9IGlucHV0LmZpbGVzWzBdLm5hbWU7CiAgICAgICAgfTsKICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1swXSk7CiAgICAgIH0KICAgIH0sCiAgICBjcm9wKCkgewogICAgICBjb25zdCB7CiAgICAgICAgY29vcmRpbmF0ZXMsCiAgICAgICAgY2FudmFzCiAgICAgIH0gPSB0aGlzLiRyZWZzLmNyb3BwZXIuZ2V0UmVzdWx0KCk7CiAgICAgIHRoaXMuY29vcmRpbmF0ZXMgPSBjb29yZGluYXRlczsKICAgICAgdGhpcy5jcm9wcGVkSW1hZ2UgPSBjYW52YXMudG9EYXRhVVJMKCk7CiAgICB9LAogICAgZG93bmxvYWQoKSB7CiAgICAgIGxldCBmaWxlTmFtZSA9IHRoaXMuaW1hZ2VOYW1lLnNwbGl0KCcuJyk7CiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IGZpbGVOYW1lLnBvcCgpOwogICAgICBmaWxlTmFtZSA9IGZpbGVOYW1lLmpvaW4oJy4nKTsKICAgICAgY29uc3QgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpOwogICAgICBjb25zdCB5ZWFyID0gY3VycmVudERhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgY29uc3QgbW9udGggPSAoJzAnICsgKGN1cnJlbnREYXRlLmdldE1vbnRoKCkgKyAxKSkuc2xpY2UoLTIpOwogICAgICBjb25zdCBkYXkgPSAoJzAnICsgY3VycmVudERhdGUuZ2V0RGF0ZSgpKS5zbGljZSgtMik7CiAgICAgIGNvbnN0IG5ld0ZpbGUgPSBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX0tY2FyZGhlYWRlci0ke2ZpbGVOYW1lfS4ke2V4dGVuc2lvbn1gOwogICAgICBjb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwogICAgICBhLmhyZWYgPSB0aGlzLmNyb3BwZWRJbWFnZTsKICAgICAgYS5kb3dubG9hZCA9IG5ld0ZpbGU7CiAgICAgIGEuY2xpY2soKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":"AAuGA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACAC;MACA;QACAA;QACAA;MACA;IACA;IACAC;MACAD;MACAA;IACA;IACAE;MACAF;MACA;QAAAG;UAAAC;QAAA;MAAA;MACAJ;MACAA;IACA;IACAK;MACA;MACA;QACA;QACAC;UACA;UACA;QACA;QACAA;MACA;IACA;IACAC;MACA;QAAAC;QAAAC;MAAA;MACA;MACA;IACA;IACAC;MACA;MACA;MACAC;MAEA;MACA;MACA;MACA;MAEA;MAEA;MACAC;MACAA;MACAA;IACA;EACA;AACA","names":["name","components","Cropper","SVGIcon","data","image","imageName","croppedImage","methods","zoom","reset","dragover","event","dragleave","drop","target","files","loadImage","reader","crop","coordinates","canvas","download","fileName","a"],"sourceRoot":"src/.vuepress/theme/layouts","sources":["ImageCrop.vue"],"sourcesContent":["<template>\n  <div class=\"flex justify-center items-center h-screen w-full p-4\">\n    <div v-if=\"croppedImage\" class=\"flex flex-col grid-margins\">\n      <div>\n        <img :src=\"croppedImage\" />\n      </div>\n      <div class=\"flex items-center justify-center mt-4\">\n        <button\n          class=\"bg-blueGreen transition duration-300 hover:bg-blueGreenScreen text-white px-4 py-2 mr-4\"\n          @click=\"download\"\n        >\n          Download\n        </button>\n        <button\n          class=\"bg-blueGreen transition duration-300 hover:bg-blueGreenScreen text-white px-4 py-2\"\n          @click=\"reset\"\n        >\n          Load a new image\n        </button>\n      </div>\n    </div>\n    <div\n      v-if=\"image && !croppedImage\"\n      class=\"flex flex-col justify-center relative w-full h-screen grid-margins\"\n    >\n      <div class=\"flex justify-center mb-3\">\n        <button\n          class=\"bg-blueGreen hover:bg-blueGreenScreen transition duration-300 ease-in-out text-white p-2 mr-4\"\n          @click=\"zoom(1.5)\"\n        >\n          <SVGIcon\n            class=\"color-white fill-current w-6 h-6\"\n            name=\"zoom-in\"\n            title=\"Zoom in\"\n          />\n        </button>\n        <button\n          class=\"bg-blueGreen hover:bg-blueGreenScreen transition duration-300 ease-in-out text-white p-2 mr-4\"\n          @click=\"zoom(0.5)\"\n        >\n          <SVGIcon\n            class=\"color-white fill-current w-6 h-6\"\n            name=\"zoom-out\"\n            title=\"Zoom out\"\n          />\n        </button>\n        <button\n          class=\"bg-blueGreen hover:bg-blueGreenScreen transition duration-300 ease-in-out text-white p-2 mr-4\"\n          @click=\"crop\"\n        >\n          <SVGIcon\n            class=\"color-white fill-current w-6 h-6\"\n            name=\"save-icon\"\n            title=\"Save\"\n          />\n        </button>\n        <button\n          class=\"bg-blueGreen hover:bg-blueGreenScreen transition duration-300 ease-in-out text-white p-2\"\n          @click=\"reset\"\n        >\n          <SVGIcon\n            class=\"color-white fill-current w-6 h-6\"\n            name=\"trash-icon\"\n            title=\"Delete\"\n          />\n        </button>\n      </div>\n      <cropper\n        ref=\"cropper\"\n        class=\"cropper\"\n        :debounce=\"false\"\n        :src=\"image\"\n        :stencil-props=\"{\n          aspectRatio: 1.91,\n        }\"\n      />\n      <div class=\"mt-3 mx-auto max-w-lg text-center\">\n        <strong>Pro tip:</strong> Avoid words in images, as they detract from\n        post or card titles and can be hard to read at small sizes.\n      </div>\n    </div>\n    <div\n      v-if=\"!image && !croppedImage\"\n      class=\"image-upload flex flex-col items-center cursor-pointer justify-center bg-white text-blueGreen text-center h-screen w-full max-w-2xl opacity-75 hover:opacity-100 transition-all duration-300 ease-in-out border-2 border-dashed rounded text-lg\"\n      @dragover=\"dragover\"\n      @dragleave=\"dragleave\"\n      @drop=\"drop\"\n      @click=\"$refs.file.click()\"\n    >\n      <input\n        ref=\"file\"\n        class=\"hidden\"\n        type=\"file\"\n        accept=\"image/*\"\n        @change=\"loadImage($event)\"\n      />\n      Drag and drop an image<br />\n      (or click to browse)\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Cropper } from 'vue-advanced-cropper'\nimport SVGIcon from '@theme/components/base/SVGIcon.vue'\nimport 'vue-advanced-cropper/dist/style.css'\n\nexport default {\n  name: 'ImageCrop',\n  components: {\n    Cropper,\n    SVGIcon,\n  },\n  data() {\n    return {\n      image: null,\n      imageName: '',\n      croppedImage: null,\n    }\n  },\n  methods: {\n    zoom(factor) {\n      this.$refs.cropper.zoom(factor)\n    },\n    reset() {\n      this.image = null\n      this.croppedImage = null\n    },\n    dragover(event) {\n      event.preventDefault()\n      if (!event.currentTarget.classList.contains('border-solid')) {\n        event.currentTarget.classList.remove('border-dashed')\n        event.currentTarget.classList.add('border-solid')\n      }\n    },\n    dragleave(event) {\n      event.currentTarget.classList.add('border-dashed')\n      event.currentTarget.classList.remove('border-solid')\n    },\n    drop(event) {\n      event.preventDefault()\n      this.loadImage({ target: { files: event.dataTransfer.files } })\n      event.currentTarget.classList.add('border-dashed')\n      event.currentTarget.classList.remove('border-solid')\n    },\n    loadImage(event) {\n      const input = event.target\n      if (input.files && input.files[0]) {\n        const reader = new FileReader()\n        reader.onload = (e) => {\n          this.image = e.target.result\n          this.imageName = input.files[0].name\n        }\n        reader.readAsDataURL(input.files[0])\n      }\n    },\n    crop() {\n      const { coordinates, canvas } = this.$refs.cropper.getResult()\n      this.coordinates = coordinates\n      this.croppedImage = canvas.toDataURL()\n    },\n    download() {\n      let fileName = this.imageName.split('.')\n      const extension = fileName.pop()\n      fileName = fileName.join('.')\n\n      const currentDate = new Date()\n      const year = currentDate.getFullYear()\n      const month = ('0' + (currentDate.getMonth() + 1)).slice(-2)\n      const day = ('0' + currentDate.getDate()).slice(-2)\n\n      const newFile = `${year}-${month}-${day}-cardheader-${fileName}.${extension}`\n\n      const a = document.createElement('a')\n      a.href = this.croppedImage\n      a.download = newFile\n      a.click()\n    },\n  },\n}\n</script>\n\n<style scoped>\n.image-upload {\n  max-height: 30rem;\n  border-color: #3e9096;\n}\n\n.cropper {\n  max-height: 70vh;\n}\n</style>\n"]}]}