{"remainingRequest":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/prithvi/lab/blog/src/.vuepress/theme/components/MobileNav.vue?vue&type=style&index=0&id=03d15bea&lang=postcss&scoped=true&","dependencies":[{"path":"/Users/prithvi/lab/blog/src/.vuepress/theme/components/MobileNav.vue","mtime":1669098253299},{"path":"/Users/prithvi/lab/blog/node_modules/css-loader/dist/cjs.js","mtime":1669100514930},{"path":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1669100514897},{"path":"/Users/prithvi/lab/blog/node_modules/postcss-loader/src/index.js","mtime":1669100514914},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js","mtime":1669100514895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tb2JpbGUtbmF2X19saW5rIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5tb2JpbGUtbmF2X19saW5rLnJvdXRlci1saW5rLWFjdGl2ZTphZnRlciB7CiAgY29udGVudDogJyc7CiAgaGVpZ2h0OiAxcHg7CiAgYm90dG9tOiAtMnB4OwogIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjsKICBAYXBwbHkgYWJzb2x1dGU7CiAgQGFwcGx5IHctZnVsbDsKICBAYXBwbHkgbGVmdC0wOwogIEBhcHBseSB0cmFuc2l0aW9uLW9wYWNpdHk7CiAgQGFwcGx5IGR1cmF0aW9uLTIwMDsKfQoKLnRyYW5zaXRpb24tY29udGVudC1lbnRlci1hY3RpdmUsCi50cmFuc2l0aW9uLWNvbnRlbnQtbGVhdmUtYWN0aXZlIHsKICBAYXBwbHkgdHJhbnNpdGlvbiB0cmFuc2Zvcm0gZHVyYXRpb24tMzAwIGVhc2UtaW4tb3V0IG9wYWNpdHktMTAwIHNjYWxlLTEwMDsKfQoudHJhbnNpdGlvbi1jb250ZW50LWVudGVyLAoudHJhbnNpdGlvbi1jb250ZW50LWxlYXZlLXRvIHsKICBAYXBwbHkgb3BhY2l0eS0wIHNjYWxlLTEwNTsKfQo="},{"version":3,"sources":["MobileNav.vue"],"names":[],"mappings":";AAuGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MobileNav.vue","sourceRoot":"src/.vuepress/theme/components","sourcesContent":["<template>\n  <mq-layout :mq=\"['sm', 'md']\">\n    <transition name=\"transition-content\" @after-enter=\"afterEnter\">\n      <div\n        v-if=\"mobileNavActive\"\n        v-scroll-lock=\"mobileNavActive\"\n        class=\"mobile-nav bg-gradient-6 grid grid-cols-12 fixed h-full top-0 inset-x-0 text-white flex flex-col z-40\"\n      >\n        <div class=\"col-span-10 col-start-2 flex flex-col py-8\">\n          <div class=\"flex-grow justify-center flex flex-col\">\n            <nav>\n              <ul>\n                <li\n                  v-for=\"page in $themeLocaleConfig.mobileNavLinks\"\n                  :key=\"page.title\"\n                  class=\"mb-3\"\n                >\n                  <Link\n                    class=\"mobile-nav__link type-h1\"\n                    :item=\"page\"\n                    :on-click=\"onClickNavLink\"\n                  />\n                </li>\n              </ul>\n            </nav>\n          </div>\n          <SocialLinks class=\"mobile-nav_footer flex\" />\n        </div>\n      </div>\n    </transition>\n  </mq-layout>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport SocialLinks from '@theme/components/SocialLinks'\nimport Link from '@theme/components/base/Link'\nimport trapFocus from '@theme/util/trapFocus'\n\nimport countly from '../util/countly'\n\nexport default {\n  name: 'MobileNav',\n  components: {\n    SocialLinks,\n    Link,\n  },\n  data() {\n    return {\n      tabItems: [],\n    }\n  },\n  computed: {\n    ...mapState('appState', ['mobileNavActive', 'routerLocation']),\n  },\n  watch: {\n    routerLocation() {\n      if (this.mobileNavActive) {\n        this.$store.commit('appState/toggleMobileNav', false)\n      }\n    },\n  },\n  destroyed() {\n    window.removeEventListener('keydown', this.trapFocus)\n  },\n  methods: {\n    closeMenu() {\n      this.$store.commit('appState/toggleMobileNav', false)\n    },\n    setTabItems() {\n      if (this.tabItems.length) {\n        window.removeEventListener('keydown', this.trapFocus)\n      }\n      const tabItems = [\n        ...Array.from(\n          this.$parent.$refs.nav.$el.querySelectorAll('.mobile-list-item')\n        ),\n        ...Array.from(this.$el.querySelectorAll('A, button')),\n      ]\n\n      this.tabItems = tabItems.filter((el) => {\n        const style = window.getComputedStyle(el)\n        return style.display !== 'none'\n      })\n\n      this.trapFocus = trapFocus.bind(null, this.tabItems, this.closeMenu)\n      window.addEventListener('keydown', this.trapFocus)\n    },\n    afterEnter() {\n      this.setTabItems()\n    },\n    onClickNavLink(item) {\n      countly.trackEvent(countly.events.LINK_CLICK_NAV, {\n        view: this.$route.path,\n        href: item.link,\n        text: item.text,\n      })\n    },\n  },\n}\n</script>\n\n<style lang=\"postcss\" scoped>\n.mobile-nav__link {\n  position: relative;\n}\n\n.mobile-nav__link.router-link-active:after {\n  content: '';\n  height: 1px;\n  bottom: -2px;\n  background-color: currentColor;\n  @apply absolute;\n  @apply w-full;\n  @apply left-0;\n  @apply transition-opacity;\n  @apply duration-200;\n}\n\n.transition-content-enter-active,\n.transition-content-leave-active {\n  @apply transition transform duration-300 ease-in-out opacity-100 scale-100;\n}\n.transition-content-enter,\n.transition-content-leave-to {\n  @apply opacity-0 scale-105;\n}\n</style>\n"]}]}