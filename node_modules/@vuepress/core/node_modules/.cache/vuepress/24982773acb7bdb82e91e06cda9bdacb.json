{"remainingRequest":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/prithvi/lab/blog/src/.vuepress/theme/components/blog/SearchCategoriesAndTags.vue?vue&type=style&index=0&id=6f41d365&lang=css&","dependencies":[{"path":"/Users/prithvi/lab/blog/src/.vuepress/theme/components/blog/SearchCategoriesAndTags.vue","mtime":1669098253301},{"path":"/Users/prithvi/lab/blog/node_modules/css-loader/dist/cjs.js","mtime":1669100514930},{"path":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1669100514897},{"path":"/Users/prithvi/lab/blog/node_modules/postcss-loader/src/index.js","mtime":1669100514914},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js","mtime":1669100514895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tdWx0aXNlbGVjdF9fdGFnLAoubXVsdGlzZWxlY3RfX3RhZy1pY29uOmhvdmVyLAoubXVsdGlzZWxlY3RfX29wdGlvbi0taGlnaGxpZ2h0LAoubXVsdGlzZWxlY3RfX29wdGlvbi0taGlnaGxpZ2h0OjphZnRlciB7CiAgQGFwcGx5IGJnLWJsdWVHcmVlbjsKfQoKLm11bHRpc2VsZWN0X190YWctaWNvbjo6YWZ0ZXIgewogIGNvbG9yOiB3aGl0ZTsKICBvcGFjaXR5OiAwLjU7Cn0KCi5tdWx0aXNlbGVjdF9fdGFnLWljb246aG92ZXI6OmFmdGVyIHsKICBvcGFjaXR5OiAxOwp9CgoubXVsdGlzZWxlY3RfX29wdGlvbi0taGlnaGxpZ2h0Lm11bHRpc2VsZWN0X19vcHRpb24tLXNlbGVjdGVkLAoubXVsdGlzZWxlY3RfX29wdGlvbi0taGlnaGxpZ2h0Lm11bHRpc2VsZWN0X19vcHRpb24tLXNlbGVjdGVkOjphZnRlciB7CiAgQGFwcGx5IGJnLWFxdWFNdXRlZDsKfQoKLm11bHRpc2VsZWN0X19wbGFjZWhvbGRlciwKLm11bHRpc2VsZWN0X19pbnB1dCB7CiAgaGVpZ2h0OiAxLjVyZW07CiAgbWFyZ2luLWJvdHRvbTogMDsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWxlZnQ6IDAuMzEyNXJlbTsKICBmb250LXNpemU6IDFyZW07Cn0KCi5tdWx0aXNlbGVjdF9fdGFncyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgYm9yZGVyOiBub25lOwp9CgoubXVsdGlzZWxlY3RfX3RhZ3Mtd3JhcCB7CiAgcGFkZGluZzogMDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKfQoKLm11bHRpc2VsZWN0X190YWcgewogIG1hcmdpbi1ib3R0b206IDAuNXJlbTsKfQoKLm11bHRpc2VsZWN0LS1hY3RpdmUgLm11bHRpc2VsZWN0X190YWdzIHsKICBwYWRkaW5nLWJvdHRvbTogMC41cmVtOwp9CgoubXVsdGlzZWxlY3RfX3NpbmdsZSwKLm11bHRpc2VsZWN0X19zdHJvbmcgewogIG1hcmdpbi1ib3R0b206IDA7Cn0K"},{"version":3,"sources":["SearchCategoriesAndTags.vue"],"names":[],"mappings":";AAiSA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SearchCategoriesAndTags.vue","sourceRoot":"src/.vuepress/theme/components/blog","sourcesContent":["<template>\n  <div>\n    <div class=\"mb-2\">Filter items by type:</div>\n    <div\n      class=\"flex flex-col xl:flex-row\"\n      @keyup.left=\"handleKeyUp(-1)\"\n      @keyup.right=\"handleKeyUp(1)\"\n    >\n      <multiselect\n        ref=\"select0\"\n        :value=\"\n          activeCategory !== '' ? activeCategory : { name: 'All content' }\n        \"\n        class=\"mb-2 xl:mb-0 xl:mr-2 xl:max-w-xs\"\n        :options=\"[{ name: 'All content' }, ...categoriesList]\"\n        label=\"name\"\n        track-by=\"name\"\n        :searchable=\"false\"\n        :allow-empty=\"false\"\n        select-label=\"Press 'enter' to select\"\n        deselect-label=\"\"\n        @input=\"setActiveCategory\"\n        @open=\"setSelected(0)\"\n      />\n      <multiselect\n        ref=\"select1\"\n        v-model=\"selectedTags\"\n        class=\"mb-2 xl:mb-0 xl:mr-2\"\n        tag-placeholder=\"search for this text\"\n        placeholder=\"Search for words or #tags\"\n        track-by=\"name\"\n        :custom-label=\"\n          (option) =>\n            tagsList.map((tag) => tag.name).includes(option.name)\n              ? `#${option.name}`\n              : option.name\n        \"\n        :limit=\"['xxl'].includes($mq) ? tagsLimit : tagsList.length\"\n        :options=\"resolvedTags\"\n        :multiple=\"true\"\n        :taggable=\"true\"\n        select-label=\"Press 'enter' to select\"\n        deselect-label=\"Press 'enter' to remove\"\n        @tag=\"handleAddTag\"\n        @remove=\"removeTag\"\n        @select=\"focusOnSubmit\"\n        @open=\"setSelected(1)\"\n      ></multiselect>\n\n      <button\n        ref=\"select2\"\n        class=\"h-full p-2 text-white font-semibold bg-blueGreen rounded hover:bg-blueGreenScreen transition duration-300 ease-in-out\"\n        @click=\"handleSearch\"\n        @focus=\"setSelected(2)\"\n      >\n        Search\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport { mapState } from 'vuex'\n\nimport countly from '../../util/countly'\n\nexport default {\n  name: 'SearchCategoriesAndTags',\n  components: { Multiselect },\n  props: {\n    tags: {\n      type: Array,\n      default: () => ['list', 'of', 'tags', '#'],\n    },\n  },\n  data() {\n    return {\n      selectedTags: [],\n      searchedWords: [],\n      selectedInput: 0,\n      tagsLimit: 99,\n    }\n  },\n  computed: {\n    ...mapState('appState', [\n      'categoriesList',\n      'tagsList',\n      'activeCategory',\n      'activeTags',\n      'searchedText',\n    ]),\n    resolvedTags() {\n      return this.tags.map((tag) => ({\n        name: tag.name,\n        value: tag.slug,\n      }))\n    },\n    queryProptertyWatchlist() {\n      return `${this.activeTags}|${this.searchedText}`\n    },\n  },\n  watch: {\n    queryProptertyWatchlist() {\n      this.updateTagsWithQuery()\n    },\n  },\n  created() {\n    this.calculateTagsLimit()\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.tagsEvent)\n    }\n  },\n  destroyed() {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', this.tagsEvent)\n    }\n  },\n  methods: {\n    tagsEvent() {\n      if (['xxl'].includes(this.$mq)) {\n        this.calculateTagsLimit()\n      }\n    },\n    calculateTagsLimit(newTags) {\n      // The max value a char chan occupy in px\n      const multiplier = 12\n      // Width of the help text - \"X or more\"\n      const helpTextWidth = 75\n      // Padding and margin for the each tag\n      const tagPadding = 46\n      let limit = this.tagsList.length\n\n      if (typeof window !== 'undefined' && this.$refs.select1) {\n        const tagsEl = this.$refs.select1.$el.childNodes[2]\n        const tagsStyles = window.getComputedStyle(tagsEl)\n        // Width of the tags container\n        const availableWidth =\n          tagsEl.getBoundingClientRect().width -\n          parseFloat(tagsStyles.paddingLeft) -\n          parseFloat(tagsStyles.paddingRight)\n\n        const tagNames = (newTags || this.selectedTags).map((tag) => tag.name)\n        const tags = tagNames.map(\n          (tagName) => tagPadding + tagName.length * multiplier\n        )\n        const estimatedTagsWidth = tags.reduce((a, b) => a + b, 0)\n\n        if (estimatedTagsWidth > availableWidth) {\n          let charCount = helpTextWidth\n\n          for (let i = 0; i < tags.length; i++) {\n            if (charCount + tags[i] > availableWidth) {\n              break\n            }\n\n            charCount += tags[i]\n\n            limit = i + 1\n          }\n        }\n      }\n\n      this.tagsLimit = limit\n    },\n    updateTagsWithQuery() {\n      const { query } = this.$route\n\n      const queryTags = query.tags ? query.tags.split(',') : []\n      const querySearch = query.search ? query.search.split(',') : []\n      const tagsListSlugs = this.tagsList.map((tag) => tag.slug)\n\n      const tagArray = this.selectedTags.map((tag) => tag.value)\n      const tagsToAdd = [...queryTags, ...querySearch].filter(\n        (tag) => !tagArray.includes(tag)\n      )\n      const tagsToRemove = tagArray.filter(\n        (tag) => tagsListSlugs.includes(tag) && !queryTags.includes(tag)\n      )\n      const textsToRemove = tagArray.filter(\n        (tag) => !tagsListSlugs.includes(tag) && !querySearch.includes(tag)\n      )\n\n      const newTags = this.selectedTags.filter(\n        (tag) =>\n          !tagsToRemove.includes(tag.value) &&\n          !textsToRemove.includes(tag.value)\n      )\n\n      tagsToAdd.forEach((tag) => {\n        const filteredTag = this.tagsList.find(\n          (listTag) => listTag.slug === tag\n        )\n\n        newTags.push({\n          name: filteredTag ? filteredTag.name : tag,\n          value: filteredTag ? filteredTag.slug : tag,\n        })\n      })\n\n      this.selectedTags = newTags\n    },\n    setActiveCategory(category) {\n      const categoryTracking = {\n        category: category.name,\n        method: 'filter-select',\n      }\n\n      countly.trackEvent(countly.events.FILTER, categoryTracking)\n\n      this.$store.commit(\n        'appState/setActiveCategory',\n        this.categoriesList\n          .map((category) => category.slug)\n          .includes(category.slug)\n          ? category\n          : ''\n      )\n    },\n    removeTag(tagToRemove) {\n      if (this.activeTags.length > 0 || this.searchedText.length > 0) {\n        this.selectedTags = this.selectedTags.filter(\n          (tag) => tag.value !== tagToRemove.value\n        )\n        this.handleSearch()\n      }\n    },\n    handleSearch() {\n      const tagArray = this.selectedTags.map((tag) => tag.value)\n      const tagsListSlugs = this.tagsList.map((tag) => tag.slug)\n      const tags = tagArray.filter((tag) => tagsListSlugs.includes(tag))\n      const texts = tagArray.filter((tag) => !tagsListSlugs.includes(tag))\n\n      this.$store.commit('appState/setActiveTags', tags)\n      this.$store.commit('appState/setSearchedText', texts)\n    },\n    handleAddTag(text) {\n      const option = {\n        name: text,\n        value: text,\n      }\n\n      const textTracking = {\n        text: text,\n        method: 'filter-select',\n      }\n\n      countly.trackEvent(countly.events.FILTER, textTracking)\n\n      this.selectedTags.push(option)\n      this.calculateTagsLimit([...this.selectedTags, option])\n      this.$refs.select2.focus()\n    },\n    focusOnSubmit(option) {\n      const tagTracking = {\n        tag: option.name,\n        method: 'filter-select',\n      }\n\n      countly.trackEvent(countly.events.FILTER, tagTracking)\n\n      this.calculateTagsLimit()\n      this.$refs.select2.focus()\n    },\n    handleKeyUp(switcher) {\n      const futureFocus = this.selectedInput + switcher\n      let futureIndex = 2\n\n      if (switcher === -1) {\n        futureIndex = futureFocus >= 0 ? futureFocus : 2\n      } else {\n        futureIndex = futureFocus <= 2 ? futureFocus : 0\n      }\n\n      if (futureIndex === 2) {\n        this.$refs.select2.focus()\n        this.selectedInput = 2\n      } else {\n        this.$refs['select' + futureIndex].$el.focus()\n      }\n    },\n    setSelected(index) {\n      this.selectedInput = index\n    },\n  },\n}\n</script>\n\n<style>\n.multiselect__tag,\n.multiselect__tag-icon:hover,\n.multiselect__option--highlight,\n.multiselect__option--highlight::after {\n  @apply bg-blueGreen;\n}\n\n.multiselect__tag-icon::after {\n  color: white;\n  opacity: 0.5;\n}\n\n.multiselect__tag-icon:hover::after {\n  opacity: 1;\n}\n\n.multiselect__option--highlight.multiselect__option--selected,\n.multiselect__option--highlight.multiselect__option--selected::after {\n  @apply bg-aquaMuted;\n}\n\n.multiselect__placeholder,\n.multiselect__input {\n  height: 1.5rem;\n  margin-bottom: 0;\n  padding-top: 0;\n  padding-left: 0.3125rem;\n  font-size: 1rem;\n}\n\n.multiselect__tags {\n  display: flex;\n  flex-wrap: wrap;\n  border: none;\n}\n\n.multiselect__tags-wrap {\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.multiselect__tag {\n  margin-bottom: 0.5rem;\n}\n\n.multiselect--active .multiselect__tags {\n  padding-bottom: 0.5rem;\n}\n\n.multiselect__single,\n.multiselect__strong {\n  margin-bottom: 0;\n}\n</style>\n"]}]}