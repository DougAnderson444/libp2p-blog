{"remainingRequest":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/prithvi/lab/blog/src/.vuepress/theme/layouts/BlogPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/prithvi/lab/blog/src/.vuepress/theme/layouts/BlogPost.vue","mtime":1669099310487},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/babel-loader/lib/index.js","mtime":1669100514953},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js","mtime":1669100514895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMYXlvdXQgZnJvbSAnQHRoZW1lL2xheW91dHMvTGF5b3V0LnZ1ZScKaW1wb3J0IExhenlJbWFnZSBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9iYXNlL0xhenlJbWFnZScKaW1wb3J0IFBvc3RIZXJvIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL2Jsb2cvUG9zdEhlcm8nCmltcG9ydCBDb21tZW50cyBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9ibG9nL0NvbW1lbnRzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdCbG9nUG9zdCcsCiAgY29tcG9uZW50czogewogICAgTGF5b3V0LAogICAgTGF6eUltYWdlLAogICAgUG9zdEhlcm8sCiAgICBDb21tZW50cywKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBzaG93Q29tbWVudHM6IG51bGwsCiAgfSksCiAgY29tcHV0ZWQ6IHsKICAgIC8vIGhpZGRlbiBmaWVsZCBzZXQgaW4gcGx1Z2lucy9wYWdlRGF0YS5qcwogICAgaXNWaXNpYmxlKCkgewogICAgICByZXR1cm4gIXRoaXMuJHJvb3QuJHBhZ2UuaGlkZGVuCiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8vIHJlZGlyZWN0IHJvdXRlcyB0aGF0IGFyZSBub3QgYmxvZyBwb3N0cyAoL2V2ZW50cywgL3ZpZGVvcywgZXRjKQogICAgLy8gdG8gdGhlIGhvbWVwYWdlIHdpdGggdGhlIHNlYXJjaCBwYXJhbWV0ZXIgY2F0ZWdvcnkKICAgIGlmICghdGhpcy5pc1Zpc2libGUgJiYgdGhpcy4kcm9vdC4kcGFnZS5mcm9udG1hdHRlci50eXBlKSB7CiAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLiRyb290LiRwYWdlLmZyb250bWF0dGVyLnR5cGUKCiAgICAgIC8vIHBhdGggaXMgcmVsYXRpdmUgdG8gc3VwcG9ydCBpcGZzIHN1YiBwYXRoIGRlcGxveW1lbnRzCiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7IHBhdGg6IGAuLi8/Y2F0ZWdvcnk9JHt0eXBlLnNsdWd9YCB9KQogICAgfQoKICAgIC8vIHJlZGlyZWN0IGFueSBvdGhlciBibG9nIHBvc3Qgcm91dGUgdGhhdCBzaG91bGQgbm90IGJlIHZpc2libGUKICAgIC8vIHRvIHRoZSA0MDQgcGFnZSAoaGlkZGVuIG9yIHNjaGVkdWxlZCBwdWJsaXNoIHBvc3RzKQogICAgaWYgKCF0aGlzLmlzVmlzaWJsZSkgewogICAgICAvLyBwYXRoIHRvIDQwNCBpcyByZWxhdGl2ZSB0byBzdXBwb3J0IGlwZnMgc3ViIHBhdGggZGVwbG95bWVudHMKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlci5yZXBsYWNlKHsgcGF0aDogJy4uLzQwNCcgfSkKICAgIH0KCiAgICBjb25zdCBpcGZzUGF0aFJlZ0V4cCA9IC9eKFwvKD86aXBmc3xpcG5zKVwvW14vXSspLwogICAgY29uc3QgaXBmc1BhdGhQcmVmaXggPQogICAgICAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLm1hdGNoKGlwZnNQYXRoUmVnRXhwKSB8fCBbXSlbMV0gfHwgJycKCiAgICBpZiAoaXBmc1BhdGhQcmVmaXgpIHsKICAgICAgQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpZnJhbWUnKSkuZm9yRWFjaCgoaWZyYW1lKSA9PiB7CiAgICAgICAgY29uc3Qgc3JjID0gaWZyYW1lLmdldEF0dHJpYnV0ZSgnc3JjJykKICAgICAgICBpZiAoc3JjLnN0YXJ0c1dpdGgoJy8nKSkgewogICAgICAgICAgaWZyYW1lLnNldEF0dHJpYnV0ZSgnc3JjJywgaXBmc1BhdGhQcmVmaXggKyBzcmMpCiAgICAgICAgfQogICAgICB9KQogICAgfQoKICAgIHRoaXMuc2hvd0NvbW1lbnRzID0KICAgICAgISFpcGZzUGF0aFByZWZpeCB8fAogICAgICB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUuaW5jbHVkZXMoJy5pcG5zLmxvY2FsaG9zdCcpIHx8CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ2xpYnAycC5pby9ibG9nJyB8fAogICAgICB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgPT09ICdsaWJwMnAtYmxvZy5vbi5mbGVlay5jbycgfHwKICAgICAgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lID09PSAnbGlicDJwLWJsb2ctc3RhZ2luZy5vbi5mbGVlay5jbycKICB9LAp9Cg=="},{"version":3,"sources":["BlogPost.vue"],"names":[],"mappings":";AAgCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlogPost.vue","sourceRoot":"src/.vuepress/theme/layouts","sourcesContent":["<template>\n  <Layout v-if=\"isVisible\">\n    <article itemscope itemtype=\"https://schema.org/BlogPosting\">\n      <PostHero\n        :title=\"$page.title\"\n        :author=\"$frontmatter.author\"\n        :date=\"$frontmatter.date\"\n        :tags=\"$frontmatter.tags\"\n        :image=\"$frontmatter.header_image\"\n      />\n      <div class=\"grid-margins max-w-5xl\">\n        <div v-if=\"$frontmatter.image\" class=\"blog type-rich my-12\">\n          <LazyImage\n            :alt=\"$page.title\"\n            :src=\"\n              $frontmatter.image\n                ? $frontmatter.image\n                : '/blog-post-placeholder.png'\n            \"\n          />\n        </div>\n        <Content\n          itemprop=\"articleBody\"\n          class=\"blog type-rich mb-10 mt-4 pt-4 border-t-2 border-gray border-opacity-25 px-2 sm:px-6 md:px-0\"\n        />\n        <Comments v-if=\"showComments\" />\n      </div>\n    </article>\n  </Layout>\n</template>\n\n<script>\nimport Layout from '@theme/layouts/Layout.vue'\nimport LazyImage from '@theme/components/base/LazyImage'\nimport PostHero from '@theme/components/blog/PostHero'\nimport Comments from '@theme/components/blog/Comments'\n\nexport default {\n  name: 'BlogPost',\n  components: {\n    Layout,\n    LazyImage,\n    PostHero,\n    Comments,\n  },\n  data: () => ({\n    showComments: null,\n  }),\n  computed: {\n    // hidden field set in plugins/pageData.js\n    isVisible() {\n      return !this.$root.$page.hidden\n    },\n  },\n  mounted() {\n    // redirect routes that are not blog posts (/events, /videos, etc)\n    // to the homepage with the search parameter category\n    if (!this.isVisible && this.$root.$page.frontmatter.type) {\n      const type = this.$root.$page.frontmatter.type\n\n      // path is relative to support ipfs sub path deployments\n      return this.$router.replace({ path: `../?category=${type.slug}` })\n    }\n\n    // redirect any other blog post route that should not be visible\n    // to the 404 page (hidden or scheduled publish posts)\n    if (!this.isVisible) {\n      // path to 404 is relative to support ipfs sub path deployments\n      return this.$router.replace({ path: '../404' })\n    }\n\n    const ipfsPathRegExp = /^(\\/(?:ipfs|ipns)\\/[^/]+)/\n    const ipfsPathPrefix =\n      (window.location.pathname.match(ipfsPathRegExp) || [])[1] || ''\n\n    if (ipfsPathPrefix) {\n      Array.from(document.querySelectorAll('iframe')).forEach((iframe) => {\n        const src = iframe.getAttribute('src')\n        if (src.startsWith('/')) {\n          iframe.setAttribute('src', ipfsPathPrefix + src)\n        }\n      })\n    }\n\n    this.showComments =\n      !!ipfsPathPrefix ||\n      window.location.hostname.includes('.ipns.localhost') ||\n      window.location.hostname === 'libp2p.io/blog' ||\n      window.location.hostname === 'libp2p-blog.on.fleek.co' ||\n      window.location.hostname === 'libp2p-blog-staging.on.fleek.co'\n  },\n}\n</script>\n\n<style lang=\"postcss\">\n.blog > h1,\n.blog > h2 {\n  padding-bottom: 0.5rem;\n  border-bottom: 2px solid #d1d1d663;\n}\n\n.blog > iframe {\n  @apply mx-auto;\n}\n\n.blog > iframe[src*='youtube'],\n.blog > iframe[src*='vimeo'] {\n  @apply max-w-full;\n  height: auto;\n  aspect-ratio: 16 / 9;\n}\n\n@supports not (aspect-ratio: 1 / 1) {\n  .blog > iframe[src*='youtube'],\n  .blog > iframe[src*='vimeo'] {\n    @apply h-52;\n    @apply sm:h-80;\n  }\n}\n</style>\n"]}]}