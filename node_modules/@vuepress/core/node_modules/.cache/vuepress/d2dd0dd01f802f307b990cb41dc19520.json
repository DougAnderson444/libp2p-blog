{"remainingRequest":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/prithvi/lab/blog/src/.vuepress/theme/layouts/Blog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/prithvi/lab/blog/src/.vuepress/theme/layouts/Blog.vue","mtime":1669100063904},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/babel-loader/lib/index.js","mtime":1669100514953},{"path":"/Users/prithvi/lab/blog/node_modules/cache-loader/dist/cjs.js","mtime":1669100514958},{"path":"/Users/prithvi/lab/blog/node_modules/vue-loader/lib/index.js","mtime":1669100514895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Blog.vue"],"names":[],"mappings":";AAmfile":"Blog.vue","sourceRoot":"src/.vuepress/theme/layouts","sourcesContent":["<template>\n  <Layout>\n    <div class=\"bg-gradient-6 py-20 text-white\">\n      <div class=\"relative grid-margins mt-8\">\n        <h1 class=\"type-h1 mt-4\">\n          {{ $frontmatter.description }}\n        </h1>\n        <h2 class=\"mt-8 type-h4 max-w-4xl\">\n          All the up-to-date libp2p info you need in one place, from blog posts\n          and release notes to videos, tutorials, news coverage, and events.\n        </h2>\n        <LanguageSelector class=\"absolute right-0 language-selector\" />\n      </div>\n    </div>\n    <div class=\"pt-8 pb-4 bg-white flex-grow bg-gray-background\">\n      <SortAndFilter\n        :number-of-posts=\"pagesToShow.length\"\n        :tags=\"tags\"\n        :block-lazy-load=\"blockLazyLoad\"\n      />\n      <div\n        class=\"grid-margins pt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n        itemscope\n        itemtype=\"http://schema.org/Blog\"\n      >\n        <Card\n          v-for=\"page in pagesToShow\"\n          :key=\"page.key\"\n          class=\"mb-4\"\n          :card=\"page\"\n          :open-video-modal=\"openVideoModal\"\n          all\n        />\n      </div>\n      <div\n        v-if=\"pagesToShow.length < publicPages.length\"\n        class=\"flex justify-center mt-8 pb-4\"\n      >\n        <button\n          class=\"px-3 py-2 text-white text-xl bg-blueGreen font-semibold rounded hover:bg-blueGreenScreen transition duration-300\"\n          @click=\"handleLoadMoreClick\"\n        >\n          Load More\n        </button>\n      </div>\n    </div>\n    <VideoModal ref=\"videoModal\" />\n  </Layout>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nimport Layout from '@theme/layouts/Layout.vue'\n\nimport Card from '@theme/components/blog/Card'\nimport VideoModal from '@theme/components/blog/VideoModal'\nimport SortAndFilter from '@theme/components/blog/SortAndFilter'\nimport LanguageSelector from '@theme/components/base/LanguageSelector'\nimport { getTags } from '@theme/util/tagUtils'\nimport { parseProtectedPost, checkItem } from '@theme/util/blogUtils'\nimport uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport pick from 'lodash/pick'\nimport isEqual from 'lodash/isEqual'\nimport orderBy from 'lodash/orderBy'\nimport countly from '../util/countly'\n\nconst defaultCategory = { name: 'Blog post', slug: 'blog-post' }\n\nexport default {\n  name: 'BlogIndex',\n  components: {\n    Card,\n    Layout,\n    SortAndFilter,\n    LanguageSelector,\n    VideoModal,\n  },\n  data: function () {\n    return {\n      numberOfPagesToShow: 24,\n      infiniteScroll: false,\n      delayValues: [0, 0.15, 0.3],\n      observer: null,\n    }\n  },\n  computed: {\n    ...mapState('appState', [\n      'categoriesList',\n      'tagsList',\n      'authorsList',\n      'activeCategory',\n      'activeTags',\n      'searchedText',\n      'activeAuthor',\n      'videoModalCard',\n    ]),\n    tags() {\n      return getTags(\n        this.tagsList.filter((tag) => this.activeTags.includes(tag.slug)),\n        this.publicPages\n      )\n    },\n    publicPages: function () {\n      let result = []\n      this.$pagination.pages.forEach((page) => {\n        if (\n          this.categoriesList\n            .map((category) => category.slug)\n            .includes(page.frontmatter.type?.slug)\n        ) {\n          result = [\n            ...result,\n            ...parseProtectedPost(\n              page,\n              this.activeTags,\n              this.searchedText,\n              this.activeCategory,\n              this.activeAuthor\n            ),\n          ]\n          return\n        }\n\n        if (\n          !checkItem({\n            postType: defaultCategory,\n            tags: page.frontmatter.tags,\n            author: page.frontmatter.author,\n            title: page.frontmatter.title,\n            activeTags: this.activeTags,\n            activeAuthor: this.activeAuthor,\n            searchedText: this.searchedText,\n            activeCategory: this.activeCategory,\n          })\n        ) {\n          return false\n        }\n\n        if (page.frontmatter && !page.frontmatter.hidden) {\n          result.push({ ...page, category: defaultCategory })\n        }\n      })\n\n      return result.sort(\n        (a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date)\n      )\n    },\n    pagesToShow() {\n      return this.numberOfPagesToShow > this.publicPages.length\n        ? this.publicPages\n        : this.publicPages.slice(0, this.numberOfPagesToShow)\n    },\n    queryProptertyWatchlist() {\n      return `${JSON.stringify(this.activeCategory)}|${this.activeTags}|${\n        this.searchedText\n      }|${this.activeAuthor}`\n    },\n    urlUpdate() {\n      return this.$route.query\n    },\n  },\n  watch: {\n    queryProptertyWatchlist() {\n      this.updateQuery()\n    },\n    urlUpdate() {\n      if (Object.keys(this.$route.query).length === 0) {\n        this.$store.commit('appState/clearFilters')\n      }\n    },\n  },\n  created() {\n    let categories = []\n    let tagsArray = []\n    let authorsArray = []\n\n    this.$pagination.pages.forEach((page) => {\n      const { type, tags, data, author } = page.frontmatter\n\n      if (type) {\n        categories.push(type)\n      }\n\n      if (tags) {\n        tagsArray.push(tags)\n      }\n\n      if (data) {\n        data.forEach((subPage) => {\n          if (subPage.tags) {\n            tagsArray.push(...subPage.tags)\n          }\n        })\n      }\n\n      if (author) {\n        authorsArray.push(author)\n      }\n    })\n\n    categories = orderBy(uniq(categories, true), 'name')\n    tagsArray = uniqBy(tagsArray.flat(2), 'name')\n    authorsArray = uniq(authorsArray.flat(2), true)\n\n    this.$store.commit('appState/setCategoriesList', [\n      defaultCategory,\n      ...categories,\n    ])\n    this.$store.commit('appState/setTagsList', tagsArray)\n    this.$store.commit('appState/setAuthorsList', authorsArray)\n  },\n  mounted() {\n    this.observer = new IntersectionObserver(\n      this.handleBottomVisibilityChange,\n      {\n        threshold: 1.0,\n      }\n    )\n\n    this.observer.observe(document.querySelector('footer.footer ul'))\n\n    const { query } = this.$route\n    const newQuery = pick(Object.assign({}, query), [\n      'category',\n      'tags',\n      'search',\n      'author',\n    ])\n\n    let queryCategory = query.category || ''\n\n    const filteredCategory = this.categoriesList.find(\n      (category) =>\n        category.slug === queryCategory || category.name === queryCategory\n    )\n    if (queryCategory && !filteredCategory) {\n      queryCategory = ''\n      delete newQuery.category\n    }\n\n    let queryTags = query.tags ? query.tags.split(',') : []\n\n    if (queryTags.length > 0) {\n      queryTags = queryTags.filter((queryTag) =>\n        this.tagsList.find((tag) => tag.slug === queryTag)\n      )\n\n      if (queryTags.length === 0) {\n        delete newQuery.tags\n      }\n    }\n\n    let queryAuthor = query.author\n\n    if (\n      queryAuthor &&\n      !this.authorsList.map((author) => author.slug).includes(queryAuthor)\n    ) {\n      queryAuthor = ''\n      delete newQuery.author\n    }\n\n    if (!isEqual(query, newQuery)) {\n      this.$router.replace({ query: newQuery })\n    }\n\n    const queryText = query.search\n\n    if (queryCategory !== '') {\n      const categoryTracking = {\n        category: filteredCategory.name,\n        method: 'urlQuery',\n      }\n\n      countly.trackEvent(countly.events.FILTER, categoryTracking)\n    }\n\n    if (queryTags.length > 0) {\n      queryTags.forEach((queryTag) => {\n        const tagTracking = {\n          tag: this.tagsList.find((tag) => tag.slug === queryTag).name,\n          method: 'urlQuery',\n        }\n\n        countly.trackEvent(countly.events.FILTER, tagTracking)\n      })\n    }\n\n    if (queryText) {\n      queryText.split(',').forEach((text) => {\n        const textTracking = {\n          text: text,\n          method: 'urlQuery',\n        }\n\n        countly.trackEvent(countly.events.FILTER, textTracking)\n      })\n    }\n\n    if (queryAuthor) {\n      const authorTracking = {\n        author: queryAuthor,\n        method: 'urlQuery',\n      }\n\n      countly.trackEvent(countly.events.FILTER, authorTracking)\n    }\n\n    this.$store.commit('appState/setActiveTags', queryTags)\n    this.$store.commit(\n      'appState/setActiveCategory',\n      filteredCategory || queryCategory\n    )\n    this.$store.commit(\n      'appState/setSearchedText',\n      queryText ? queryText.split(',') : []\n    )\n    this.$store.commit(\n      'appState/setActiveAuthor',\n      this.authorsList.find((author) => author.slug === queryAuthor) || ''\n    )\n\n    const latestWeeklyPost = this.publicPages\n      .filter(\n        (item) =>\n          item.frontmatter &&\n          item.frontmatter.tags &&\n          item.frontmatter.tags.find((tag) => tag.name === 'weekly')\n      )\n      .sort(\n        (a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date)\n      )[0]\n\n    this.$store.commit('appState/setLatestWeeklyPost', latestWeeklyPost)\n  },\n  beforeDestroy() {\n    this.observer.disconnect()\n  },\n  methods: {\n    updateQuery() {\n      const newQuery = {\n        ...this.$route.query,\n        tags: this.activeTags.join(','),\n        search: this.searchedText.join(','),\n        category: this.activeCategory.slug || '',\n        author: this.activeAuthor.slug || '',\n      }\n\n      Object.keys(newQuery).forEach((entry) => {\n        const value = newQuery[entry]\n        if (value === '' || value.length === 0) {\n          delete newQuery[entry]\n        }\n      })\n      this.$router.replace({ query: newQuery }).catch(() => {})\n    },\n    blockLazyLoad() {\n      this.infiniteScroll = false\n    },\n    showMorePages() {\n      this.numberOfPagesToShow = this.numberOfPagesToShow + 24\n    },\n    handleLoadMoreClick() {\n      countly.trackEvent(countly.events.LOAD_MORE_BUTTON)\n\n      this.infiniteScroll = true\n      this.numberOfPagesToShow = this.numberOfPagesToShow + 24\n    },\n    handleBottomVisibilityChange(isVisible) {\n      if (\n        isVisible &&\n        this.infiniteScroll &&\n        this.pagesToShow.length < this.publicPages.length\n      ) {\n        this.showMorePages()\n      }\n    },\n    delayVal: function () {\n      this.current =\n        this.current < this.delayValues.length - 1 ? this.current : -1\n      return this.delayValues[++this.current]\n    },\n    openVideoModal: function () {\n      this.$refs.videoModal.openModal()\n    },\n  },\n}\n</script>\n\n<style scoped>\n.language-selector {\n  bottom: -3rem;\n}\n</style>\n"]}]}